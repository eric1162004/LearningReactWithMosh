{"version":3,"sources":["services/logService.js","services/httpService.js","services/movieService.js","services/genreService.js","components/common/listGroup.jsx","components/common/pagination.jsx","components/common/searchBox.jsx","utils/paginate.js","services/authService.js","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/common/like.jsx","components/moviesTable.jsx","components/movies.jsx","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/navBar.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/loginForm.jsx","components/logout.jsx","components/common/protectedRoute.jsx","services/userService.js","components/registerForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["init","log","error","console","axios","defaults","baseURL","process","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","setJwt","jwt","headers","common","apiEndpoint","movieUrl","movieId","getMovie","http","saveMovie","movie","_id","body","deleteMovie","getGenres","ListGroup","props","items","textProperty","valueProperty","selectedItem","onItemSelect","className","map","item","onClick","defaultProps","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","_","range","page","SearchBox","value","onChange","type","name","placeholder","e","currentTarget","paginate","pageNumber","startIndex","slice","take","tokenKey","email","password","a","data","localStorage","setItem","getJwt","getItem","login","logout","removeItem","getCurrentUser","jwtDecode","ex","loginWithJwt","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","this","columns","label","key","Component","TableBody","renderCell","content","createKey","Table","Like","classes","liked","style","cursor","aria-hidden","MoviesTable","Link","to","title","onLike","deleteColumn","onDelete","user","auth","isAdmin","push","movies","Movies","state","genres","searchQuery","selectedGenre","handleDelete","originalMovies","filter","m","setState","handleLike","index","indexOf","handlePageChange","handleGenreSelect","genre","handleSearch","query","handleSort","getPagedData","allMovies","filtered","toLowerCase","startsWith","orderBy","totalCount","length","marginBottom","Customers","Rentals","NotFound","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","NavLink","Fragment","Input","rest","htmlFor","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMessage","renderInput","renderSelect","disabled","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","number","min","max","mapToViewModel","history","populateGenres","populateMovie","match","params","replace","onSubmit","renderButton","LoginForm","username","location","window","from","pathname","Redirect","Logout","ProtectedRoute","component","render","Route","register","RegisterForm","userService","App","Switch","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.f6f82bdc.chunk.js","sourcesContent":["function init(){\r\n\r\n}\r\n\r\nfunction log(error){\r\n    console.error(error);\r\n}\r\n\r\nexport default{\r\n    init,\r\n    log\r\n}","import axios from \"axios\";\r\nimport logger from \"./logService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n\r\n  if (!expectedError) {\r\n    logger.log(error);\r\n    toast.error(\"An unexpected error occurred.\");\r\n  }\r\n\r\n  return Promise.reject(error);\r\n});\r\n\r\nfunction setJwt(jwt) {\r\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n}\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  setJwt\r\n};\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndpoint = \"/movies\";\r\n\r\nfunction movieUrl(movieId) {\r\n  return `${apiEndpoint}/${movieId}`;\r\n}\r\n\r\nexport function getMovies() {\r\n  return http.get(apiEndpoint);\r\n}\r\n\r\nexport function getMovie(movieId) {\r\n  return http.get(movieUrl(movieId));\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n  if(movie._id){\r\n    const body = {...movie};\r\n    delete body._id;\r\n    return http.put(movieUrl(movie._id), body);\r\n  }\r\n\r\n  return http.post(apiEndpoint, movie);\r\n}\r\n\r\nexport function deleteMovie(movieId) {\r\n  http.delete(movieUrl(movieId));\r\n}\r\n","import http from \"./httpService\";\r\n\r\nexport function getGenres() {\r\n  return http.get(\"/genres\");\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nconst ListGroup = (props) => {\r\n  const {\r\n    items,\r\n    textProperty,\r\n    valueProperty,\r\n    selectedItem,\r\n    onItemSelect,\r\n  } = props;\r\n\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map((item) => (\r\n        <li\r\n          onClick={() => onItemSelect(item)}\r\n          key={item[valueProperty]}\r\n          className={\r\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\r\n          }\r\n        >\r\n          {item[textProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nListGroup.defaultProps = {\r\n  textProperty: \"name\",\r\n  valueProperty: \"_id\",\r\n};\r\n\r\nexport default ListGroup;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\n\r\nconst Pagination = (props) => {\r\n  const { itemsCount, pageSize, currentPage, onPageChange } = props;\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n  if (pagesCount === 1) return null;\r\n  const pages = _.range(1, pagesCount + 1);\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map((page) => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n          >\r\n            <a onClick={() => onPageChange(page)} className=\"page-link\">\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize : PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"query\"\r\n      className=\"form-control my-3\"\r\n      placeholder=\"Search...\"\r\n      value={value}\r\n      onChange={(e) => onChange(e.currentTarget.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n","import http from \"./httpService\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst apiEndpoint = \"/auth\";\r\nconst tokenKey = \"token\";\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(email, password) {\r\n  const { data: jwt } = await http.post(apiEndpoint, { email, password });\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(tokenKey);\r\n    return jwtDecode(jwt);\r\n  } catch (ex) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function getJwt(){\r\n  return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport default {\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n  loginWithJwt,\r\n  getJwt\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = (path) => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n\r\n    if (sortColumn.path === path)\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  renderSortIcon = (column) => {\r\n    const { sortColumn } = this.props;\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\"></i>;\r\n    return <i className=\"fa fa-sort-desc\"></i>;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.columns.map((column) => (\r\n            <th\r\n              className=\"clickable\"\r\n              key={column.path || column.key}\r\n              onClick={() => this.raiseSort(column.path)}\r\n            >\r\n              {column.label} {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n\r\n    return _.get(item, column.path);\r\n  };\r\n\r\n  createKey = (item, column) => {\r\n    return item._id + (column.path || column.key);\r\n  };\r\n\r\n  render() {\r\n    const { data, columns } = this.props;\r\n\r\n    return (\r\n      <tbody>\r\n        {data.map((item) => (\r\n          <tr key={item._id}>\r\n            {columns.map((column) => (\r\n              <td key={this.createKey(item, column)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nconst Table = ({ columns, sortColumn, onSort, data }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\r\n      <TableBody columns={columns} data={data} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\n\r\nconst Like = (props) => {\r\n    let classes = \"fa fa-heart\";\r\n    if (!props.liked) classes += \"-o\";\r\n\r\n    return (\r\n      <i\r\n        onClick={props.onClick}\r\n        className={classes}\r\n        style={{cursor: 'pointer'}}\r\n        aria-hidden=\"true\"\r\n      ></i>\r\n    );\r\n}\r\n \r\nexport default Like;\r\n","import React, { Component } from \"react\";\r\nimport auth from \"../services/authService\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Table from \"./common/table\";\r\nimport Like from \"./common/like\";\r\n\r\nclass MoviesTable extends Component {\r\n  columns = [\r\n    {\r\n      path: \"title\",\r\n      label: \"Title\",\r\n      content: (movie) => (\r\n        <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\r\n      ),\r\n    },\r\n    { path: \"genre.name\", label: \"Genre\" },\r\n    { path: \"numberInStock\", label: \"Stock\" },\r\n    { path: \"dailyRentalRate\", label: \"Rate\" },\r\n    {\r\n      key: \"like\",\r\n      content: (movie) => (\r\n        <Like\r\n          liked={movie.liked}\r\n          onClick={() => this.props.onLike(movie)}\r\n        ></Like>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  deleteColumn = {\r\n    key: \"delete\",\r\n    content: (movie) => (\r\n      <button\r\n        onClick={() => this.props.onDelete(movie)}\r\n        className=\"btn btn-danger btn-sm\"\r\n      >\r\n        Delete\r\n      </button>\r\n    ),\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    const user = auth.getCurrentUser();\r\n    if (user && user.isAdmin)\r\n      this.columns.push(this.deleteColumn);\r\n  }\r\n\r\n  render() {\r\n    const { movies, onSort, sortColumn } = this.props;\r\n\r\n    return (\r\n      <Table\r\n        columns={this.columns}\r\n        data={movies}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React, { Component } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getMovies, deleteMovie } from \"../services/movieService\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport Pagination from \"./common/pagination\";\r\nimport SearchBox from \"./common/searchBox\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    genres: [],\r\n    pageSize: 4,\r\n    currentPage: 1,\r\n    searchQuery: \"\",\r\n    selectedGenre: null,\r\n    sortColumn: { path: \"title\", order: \"asc\" },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { data } = await getGenres();\r\n    const genres = [{ _id: \"\", name: \"All genres\" }, ...data];\r\n\r\n    const { data: movies } = await getMovies();\r\n    this.setState({ movies, genres });\r\n  }\r\n\r\n  handleDelete = async (movie) => {\r\n    const originalMovies = this.state.movies;\r\n    const movies = originalMovies.filter((m) => m._id !== movie._id);\r\n    this.setState({ movies });\r\n\r\n    try {\r\n      await deleteMovie(movie._id);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        toast.error(\"This movie has already been deleted.\");\r\n\r\n      this.setState({ movies: originalMovies });\r\n    }\r\n  };\r\n\r\n  handleLike = (movie) => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movies[index] };\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleGenreSelect = (genre) => {\r\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\r\n  };\r\n\r\n  handleSearch = (query) => {\r\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\r\n  };\r\n\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  getPagedData = () => {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      sortColumn,\r\n      selectedGenre,\r\n      searchQuery,\r\n      movies: allMovies,\r\n    } = this.state;\r\n\r\n    let filtered = allMovies;\r\n    if (searchQuery)\r\n      filtered = allMovies.filter((m) =>\r\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    else if (selectedGenre && selectedGenre._id)\r\n      filtered = allMovies.filter((m) => m.genre._id === selectedGenre._id);\r\n\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const movies = paginate(sorted, currentPage, pageSize);\r\n\r\n    return { totalCount: filtered.length, data: movies };\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.movies;\r\n    const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\r\n    const { user } = this.props;\r\n\r\n    // if (count === 0) return <p>There are no movies in the databases.</p>;\r\n\r\n    const { totalCount, data: movies } = this.getPagedData();\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">\r\n          <ListGroup\r\n            items={this.state.genres}\r\n            selectedItem={this.state.selectedGenre}\r\n            onItemSelect={this.handleGenreSelect}\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n          {user && (\r\n            <Link\r\n              to=\"/movies/new\"\r\n              className=\"btn btn-primary\"\r\n              style={{ marginBottom: 20 }}\r\n            >\r\n              New Movie\r\n            </Link>\r\n          )}\r\n          <p>Showing {totalCount} movies in the database.</p>\r\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n          <MoviesTable\r\n            movies={movies}\r\n            sortColumn={sortColumn}\r\n            onLike={this.handleLike}\r\n            onDelete={this.handleDelete}\r\n            onSort={this.handleSort}\r\n          ></MoviesTable>\r\n          <Pagination\r\n            itemsCount={totalCount}\r\n            pageSize={pageSize}\r\n            currentPage={currentPage}\r\n            onPageChange={this.handlePageChange}\r\n          ></Pagination>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import React from 'react';\r\n\r\nconst Customers = () => {\r\n    return ( <h1>Customers</h1> );\r\n}\r\n \r\nexport default Customers;","import React from 'react';\r\n\r\nconst Rentals = () => {\r\n    return ( <h1>Rentals</h1> );\r\n}\r\n \r\nexport default Rentals;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return ( <h1>Not Found</h1> );\r\n}\r\n \r\nexport default NotFound;","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nconst NavBar = ({ user }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        Vidly\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/movies\">\r\n              Movies\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/customers\">\r\n              Customers\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/rentals\">\r\n              Rentals\r\n            </NavLink>\r\n          </li>\r\n          {!user && (\r\n            <React.Fragment>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/login\">\r\n                  Login\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/register\">\r\n                  Register\r\n                </NavLink>\r\n              </li>\r\n            </React.Fragment>\r\n          )}\r\n          {user && (\r\n            <React.Fragment>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/profile\">\r\n                  {user.name}\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/logout\">\r\n                  Logout\r\n                </NavLink>\r\n              </li>\r\n            </React.Fragment>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input {...rest} name={name} id={name} className=\"form-control\" />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select name={name} id={name} {...rest} className=\"form-control\">\r\n        <option value=\"\"></option>\r\n        {options.map((option) => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {},\r\n  };\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderInput = (name, label, type='text') => {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  };\r\n\r\n  renderSelect = (name, label, options) => {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Select\r\n        options={options}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  };\r\n\r\n  \r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport { getGenres } from \"./../services/genreService\";\r\nimport { getMovie, saveMovie } from \"./../services/movieService\";\r\n\r\nclass MovieForm extends Form {\r\n  state = {\r\n    data: {\r\n      title: \"\",\r\n      genreId: \"\",\r\n      numberInStock: \"\",\r\n      dailyRentalRate: \"\",\r\n    },\r\n    genres: [],\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    title: Joi.string().required().label(\"Title\"),\r\n    genreId: Joi.string().required().label(\"Genre\"),\r\n    numberInStock: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(100)\r\n      .label(\"Number in Stock\"),\r\n    dailyRentalRate: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(10)\r\n      .label(\"Daily Rental Rate\"),\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await this.populateGenres();\r\n    await this.populateMovie()\r\n  }\r\n\r\n  mapToViewModel = (movie) => {\r\n    return {\r\n      _id: movie._id,\r\n      title: movie.title,\r\n      genreId: movie.genre._id,\r\n      numberInStock: movie.numberInStock,\r\n      dailyRentalRate: movie.dailyRentalRate,\r\n    };\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    await saveMovie(this.state.data);\r\n\r\n    this.props.history.push(\"/movies\");\r\n  };\r\n\r\n  async populateGenres() {\r\n    const { data: genres } = await getGenres();\r\n    this.setState({ genres });\r\n  }\r\n\r\n  async populateMovie() {\r\n    try {\r\n      const movieId = this.props.match.params.id;\r\n      if (movieId === \"new\") return;\r\n\r\n      const { data: movie } = await getMovie(movieId);\r\n      this.setState({ data: this.mapToViewModel(movie) });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        this.props.history.replace(\"/not-found\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Movie Form</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"title\", \"Title\")}\r\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\r\n          {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\r\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\r\n          {this.renderButton(\"Save\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n","import React, { Component } from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport auth from '../services/authService';\r\n\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string().required().label(\"Username\"),\r\n    password: Joi.string().required().label(\"Password\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const {data} = this.state;\r\n      await auth.login(data.username, data.password);\r\n\r\n      const {state} = this.props.location;\r\n      window.location = state ? state.from.pathname : '/';\r\n    } catch (ex) {\r\n      if(ex.response && ex.response.status === 400){\r\n        const errors = {...this.state.errors};\r\n        errors.username = ex.response.data;\r\n        this.setState({errors});\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if(auth.getCurrentUser()) return <Redirect to=\"/\"/>;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput('username', 'Username')}\r\n          {this.renderInput('password', 'Password', 'password')}\r\n          {this.renderButton(\"Login\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, { Component } from 'react';\r\nimport auth from \"../services/authService\";\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        auth.logout();\r\n        window.location = '/';\r\n    }\r\n    \r\n    render() { \r\n        return null;\r\n    }\r\n}\r\n \r\nexport default Logout;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport auth from \"../../services/authService\";\r\n\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      path={path}\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!auth.getCurrentUser())\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    ></Route>\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndpoint = \"/users\";\r\n\r\nexport function register(user){\r\n    return http.post(apiEndpoint, {\r\n        email: user.username,\r\n        password: user.password,\r\n        name: user.name\r\n    });\r\n}","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport * as userService from '../services/userService';\r\nimport auth from \"../services/authService\";\r\n\r\nclass RegisterForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\", name: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string().email().required().label(\"Username\"),\r\n    password: Joi.string().required().min(5).label(\"Password\"),\r\n    name: Joi.string().required().label(\"Name\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const response = await userService.register(this.state.data);\r\n      auth.loginWithJwt(response.headers['x-auth-token']);\r\n      window.location = \"/\";\r\n    } catch (ex) {\r\n      if(ex.response && ex.response.status === 400){\r\n        const errors = {...this.state.errors};\r\n        errors.username = ex.response.data;\r\n        this.setState({errors});\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Register</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderInput(\"name\", \"Name\")}\r\n          {this.renderButton(\"Register\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React, { Component } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Movies from \"./components/movies\";\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/rentals\";\nimport NotFound from \"./components/notFound\";\nimport NavBar from \"./components/navBar\";\nimport MovieForm from \"./components/movieForm\";\nimport LoginForm from \"./components/loginForm\";\nimport Logout from \"./components/logout\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport RegisterForm from \"./components/registerForm\";\nimport auth from \"./services/authService\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <NavBar user={user} />\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/register\" component={RegisterForm} />\n            <ProtectedRoute path=\"/movies/:id\" component={MovieForm}/>\n            <Route\n              path=\"/movies\"\n              render={(props) => <Movies {...props} user={this.state.user} />}\n            ></Route>\n            <Route path=\"/customers\" component={Customers}></Route>\n            <Route path=\"/rentals\" component={Rentals}></Route>\n            <Route path=\"/not-found\" component={NotFound}></Route>\n            <Redirect exact from=\"/\" to=\"/movies\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nconsole.log(process.env);\n\nReactDOM.render(\n  //<React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n  //</React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}